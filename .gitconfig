[user]
  name = rcmdnk
  email = rcmdnk@gmail.com

[alias]
  st = status
  sb = show-branch
  sh = show
  br = branch
  ba = branch -a
  co = checkout
  ce = checkout --orphan # checkout empty(orphan ) branch
  cl = clone
  ci = commit -a
  ad = add -A
  rbm = rebase master
  d = difftool --tool=vimdiff --no-prompt
  dns = diff --name-status
  dm = diff master
  dw = diff --color-words
  dc = diff --cached
  ds = diff --staged
  d1 = diff HEAD~
  d2 = diff HEAD~~
  d3 = diff HEAD~~~
  d4 = diff HEAD~~~~
  d5 = diff HEAD~~~~~
  d10 = diff HEAD~~~~~~~~~~
  ls = ls-files
  log-graph = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
  log-all = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
  sm = submodule
  echo-f = "!f () { echo 0: ${0};echo 1: ${1};echo 2: ${2};};f"
  echo-sh = "!sh -c 'echo 0: ${0};echo 1: ${1};echo 2: ${2}'"
  echo = "!f () { echo ${0};echo ${1};};f"
  echo3 = "!sh -c 'echo ${0};echo ${1}'"
  smad = "!f () {\
      if [ $# -lt 1 ];then \
        echo \"Usage: git smad git_repo_path [submodule parent path]\";\
        exit;\
      fi;\
      git_repo=${1};\
      repo_name=${git_repo#*/};\
      repo_name=${repo_name%.git};\
      echo git submodule add ${git_repo} ./${2}/${repo_name};\
      git submodule add ${git_repo} ./${2}/${repo_name};\
    };f"
  a = "!f () { \
      gitdir=./;\
      gitfile=.git;\
      while : ;do \
        if [ -f $gitfile ];then \
          gitfile=${gitdir}/$(awk '/gitdir/ {print $2}' ${gitfile});\
        else \
          gitdir=${gitfile};\
          break;\
        fi;\
      done;\
      echo $gitdir;\
    };f"
  smrm  = "!f () {\
      if [ $# -ne 1 ];then \
        echo \"Usage: git smrm path/to/submodule\";\
        exit;\
      fi;\
      sm=${1%/};\
      echo git config --remove-section submodule.${sm};\
      git config --remove-section submodule.${sm};\
      echo git config --file .gitmodules --remove-section submodule.${sm};\
      git config --file .gitmodules --remove-section submodule.${sm};\
      echo git rm --cached ${sm};\
      git rm --cached ${sm};\
      gitdir=./;\
      gitfile=.git;\
      while : ;do \
        if [ -f $gitfile ];then \
          gitfile=${gitdir}/$(awk '/gitdir/ {print $2}' ${gitfile});\
        else \
          gitdir=${gitfile};\
          break;\
        fi;\
      done;\
      if [ -n \"${gitdir}\" ];then \
        echo rm -rf ${gitdir}/modules/${sm};\
        rm -rf ${gitdir}/modules/${sm};\
      fi;\
      echo rm -rf ${sm};\
      rm -rf ${sm};\
    };f"
  cb = rev-parse --abbrev-ref HEAD
  pull-dry-run  = "!git fetch origin;\
    b=$(git rev-parse --abbrev-ref HEAD);\
    git diff --stat --summary ${b}..origin/${b}"
  pull-dry-run-s = "!git fetch origin $(git config branch.$(git rev-parse --abbrev-ref HEAD).merge);\
    git diff --stat --summary HEAD...FETCH_HEAD"
  tag-renew = "!f () {\
      if [ $# -ne 1 ];then \
        tag=$(git tag|tail -n1);\
        tag=${tag#v};\
      else \
        tag=$1;\
      fi;\
      tagcheck=$(git tag|grep v${tag});\
      if [ \"$tagcheck\" != \"\" ];then \
        git tag -d v${tag};\
        git push origin :v${tag};\
      fi;\
      git tag -a v${tag} -m \"tag ${tag}\";\
      git push --tag;\
    };f"
  tag-new = "!f () {\
      if [ $# -eq 0 ];then \
        tag=$(git tag|tail -n1);\
        tag=${tag#v};\
        tag_minor=${tag##*.};\
        ((tag_minor++));\
        tag=${tag%.*}.${tag_minor};\
      else \
        tag=$1;\
      fi;\
      tagcheck=$(git tag|grep v${tag});\
      if [ \"$tagcheck\" != \"\" ];then \
        git tag -d v${tag};\
        git push origin :v${tag};\
      fi;\
      git tag -a v${tag} -m \"tag ${tag}\";\
      git push --tag;\
    };f"
  cancel = "!f () {\
      git commit -a -m 'Temporary commit for cancel';\
      git reset --hard HEAD~;\
    };f"

[core]
	filemode = false
	autocrlf = false
	editor = vim
	execludesfile = ~/.gitignore_global

[push]
#	default = simple
	default = matching

[github]
	user = rcmdnk
[merge]
	tool = vimdiff
	keepBackup = false
