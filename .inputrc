#$if Bash
set bell-style none
set expand-tilde off
set convert-meta off
set input-meta on
set output-meta on

# vim mode
set editing-mode vi

$if mode=vi
  set keymap vi-command

  set keymap vi-insert

  "\C-b": backward-char
  "\eb": backward-word
  "\e<": beginning-of-history
  "\C-a": beginning-of-line
  "\C-xe": call-last-kbd-macro
  "\ec": capitalize-word
  "\C-]": character-search
  "\e\C-]": character-search-backward
  "\C-l": clear-screen
  "\e\e": complete
  "\e!": complete-command
  "\e/": complete-filename
  "\e@": complete-hostname
  "\e{": complete-into-braces
  "\e~": complete-username
  "\e$": complete-variable
  "\C-d": delete-char
  "\e\\": delete-horizontal-space
  "\e\C-i": dynamic-complete-history
  "\C-x\C-e": edit-and-execute-command
  "\C-x)": end-kbd-macro
  "\e>": end-of-history
  "\C-e": end-of-line
  "\C-x\C-x": exchange-point-and-mark
  "\C-f": forward-char
  "\ef": forward-word
  "\C-x*": glob-expand-word
  "\C-xg": glob-list-expansions
  "\e^": history-expand-line
  "\e#": insert-comment
  "\e*": insert-completions
  "\C-k": kill-line
  "\ed": kill-word
  "\C-n": next-history
  "\en": non-incremental-forward-search-history
  "\ep": non-incremental-reverse-search-history
  "\C-o": operate-and-get-next
  "\C-x!": possible-command-completions
  "\e=": possible-completions
  "\e?": possible-completions
  "\C-x/": possible-filename-completions
  "\C-x@": possible-hostname-completions
  "\C-x~": possible-username-completions
  "\C-x$": possible-variable-completions
  "\C-p": previous-history
  "\C-x\C-r": re-read-init-file
  "\e\C-r": revert-line
  "\C-@": set-mark
  "\e ": set-mark
  "\e\C-e": shell-expand-line
  "\C-x(": start-kbd-macro
  "\e&": tilde-expand
  "\et": transpose-words
  "\C-x\C-u": undo
  "\C-_": undo
  "\e.": yank-last-arg
  "\e_": yank-last-arg
  "\e\C-y": yank-nth-arg
  "\ey": yank-pop
$endif


# grep prefix
"\C-g": ""
# grep -r "" ./
"\C-g\C-r": "grep -r ./\eb\C-f \"\"\C-b"
"\C-gr": "grep -r ./\eb\C-f \"\"\C-b"
"\er": "grep -r ./\eb\C-f \"\"\C-b"
# grep "" *
"\C-g\C-g": "grep *\C-b\C-b \"\"\C-b"
"\C-gg": "grep *\C-b\C-b \"\"\C-b"
"\eg": "grep *\C-b\C-b \"\"\C-b"
# find ./|grep 
"\C-g\C-f": "find ./|grep "
"\C-gf": "find ./|grep "

# Quote/Bracket
"\e\"": "\eb\"\ef\""
"\e\'": "\eb\'\ef\'"
"\e\`": "\eb\`\ef\`"
"\e\]": "\eb\[\ef\]"
"\e\}": "\eb\{\ef\}"
"\e\)": "\eb\(\ef\)"

# Variable ${}
#"\C-q": ""
#"\C-q4": "${}\C-b"
#"\C-q$": "${}\C-b"
#"\eq": "${}\C-b"
"\eq": "${}\C-b"

# less
"\el":"\C-e | less\C-m"

# ls
"\es":"\C-e\C-uls\C-m"

# cd
#"\eu":"\C-e\C-ucd ../\C-mls\C-m"
"\eu":"\C-e\C-ucd ../\C-m"

# du
"\e\C-d": "for a in *;do du -s $a;done\C-m"

# /dev/null
"\e;": ">/dev/null\C-m"
"\e:": ">& /dev/null\C-m"

